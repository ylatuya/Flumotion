# -*- Mode: Python -*-
# vi:si:et:sw=4:sts=4:ts=4

import sys

from flumotion.common import registry

from flumotion.common import setup
setup.setup()
setup.setupPackagePath()

registry = registry.getRegistry()

basket = registry.makeBundlerBasket()

bundlerNames = basket.getBundlerNames()

exitCode = 0

for name in bundlerNames:
    # skip locale bundles, they're autogenerated and I'm too lazy to figure out
    # why validating the registry in the template module expects locale
    # bundles of core to be in the template's build dir
    if name.find('-locale-') > -1:
        continue
    try:
        basket.getBundlerByName(name).bundle()
    except OSError, e:
        sys.stderr.write("Bundle %s references missing file %s\n" % (
            name, e.filename))
        exitCode += 1

# verify all components


def componentError(c, msg):
    global exitCode
    sys.stderr.write("Component %s from %s %s.\n" %(
            c.type, c.filename, msg))
    exitCode += 1

for c in registry.getComponents():
    if c.type != c.type.lower():
        componentError(c, 'contains capitals')
    if c.type.find('_') > -1:
        componentError(c, 'contains underscores')
    if not c.description:
        componentError(c, 'is missing a description')

    def propertyError(c, p, msg):
        global exitCode
        sys.stderr.write("Property %s on component %s from %s %s.\n" %(
                p.name, c.type, c.filename, msg))
        exitCode += 1

    for p in c.getProperties():
        if p.name != p.name.lower():
            propertyError(c, p, "contains capitals")
        if p.name.find('_') > -1:
            propertyError(c, p, "contains underscores")
        if not p.description:
            propertyError(c, p, "is missing a description")

    #import code; code.interact(local=locals())

sys.exit(exitCode)
