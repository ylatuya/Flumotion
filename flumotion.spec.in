Name:           @PACKAGE@
Version:        @VERSION@
Release:        @RELEASE@
Summary:        Flumotion - the Fluendo Streaming Server.

Group:          Applications/Internet
License:	GPL
URL:            http://www.fluendo.com/
Source:         %{name}-%{version}.tar.bz2
BuildRoot:      %{_tmppath}/%{name}-%{version}-%{release}-root

Requires:	python >= 2.3
Requires:	gstreamer >= 0.8.5
Requires:	gstreamer-python >= 0.7.93
Requires:	python-twisted >= 1.3.0
Requires:	pygtk2 >= 2.4.0
Requires:	python-imaging

Requires(post):	openssl

BuildRequires:	gstreamer >= 0.8.5
BuildRequires:	python >= 2.3
Requires:	pygtk2-devel >= 2.4.0
BuildRequires:	epydoc

BuildArch:	noarch

%description
Fluendo Streaming Server.

%prep
%setup -q

%build
%configure

make

%install
rm -rf $RPM_BUILD_ROOT

%makeinstall
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/flumotion/managers/default/flows
mkdir -p $RPM_BUILD_ROOT%{_sysconfdir}/flumotion/workers

# install service files
install -d $RPM_BUILD_ROOT%{_sysconfdir}/rc.d/init.d
install -m 755 doc/redhat/flu-manager $RPM_BUILD_ROOT%{_sysconfdir}/rc.d/init.d
install -m 755 doc/redhat/flu-worker $RPM_BUILD_ROOT%{_sysconfdir}/rc.d/init.d
#install -d $RPM_BUILD_ROOT%{_sysconfdir}/sysconfig

# create a .flumotion in the new home
# FIXME: needs to be done more gracefully

install -d -m 755 $RPM_BUILD_ROOT%{_datadir}/.flumotion

# create log directory
install -d $RPM_BUILD_ROOT%{_localstatedir}/log/flumotion

%clean
rm -rf $RPM_BUILD_ROOT

%pre
/usr/sbin/useradd -s /sbin/nologin -r -d %{_datadir}/flumotion -M -r flumotion
exit 0

%post
# generate a default .pem certificate ?
if ! test -e %{_sysconfdir}/flumotion/managers/default/default.pem
then
  bash %{_datadir}/ssl/certs/make-dummy-cert %{_sysconfdir}/flumotion/managers/default/default.pem
fi

# this is going to break when the admin decides to rename planets
# this creates a user/test login account
if ! test -e %{_sysconfdir}/flumotion/managers/default/planet.xml
then
  cat > %{_sysconfdir}/flumotion/managers/default/planet.xml <<EOF
<planet>
 
  <manager>
    <component name="manager-bouncer" type="htpasswdcrypt">
      <data><![CDATA[
user:PSfNpHTkpTx1M
]]></data>
    </component>
  </manager>
 
</planet>
EOF

fi

%postun
# if removal and not upgrade, clean up user and config
if [ $1 -eq 0 ]
then
  service flumotion-manager stop > /dev/null
  service flumotion-worker stop > /dev/null
  /usr/sbin/userdel flumotion

  rm -rf %{_sysconfdir}/flumotion/*
fi

# Think about this first, we don't really want to stop everything
#%post
#service flumotion-manager condrestart
#service flumotion-worker condrestart

%files
%defattr(-,root,root,-)
%doc ChangeLog COPYING README AUTHORS
%doc doc/reference/html
%doc conf
%{_bindir}/flumotion-manager
%{_bindir}/flumotion-worker
%{_bindir}/flumotion-admin
%{_bindir}/flumotion-tester
%{_libdir}/flumotion
%{_datadir}/flumotion
%attr(750,flumotion,root) %{_datadir}/flumotion/.flumotion
%{_sysconfdir}/flumotion

#%ghost %config(noreplace) %attr(600,root,flumotion) %{_sysconfdir}/flumotion/managers/default/default.pem
%attr(750,flumotion,root) %{_localstatedir}/log/flumotion
%{_sysconfdir}/rc.d/init.d/flu-manager
%{_sysconfdir}/rc.d/init.d/flu-worker
#%ghost %{_sysconfdir}/flumotion/manager/default.pem
#%ghost %{_sysconfdir}/flumotion/planets/default.xml

%changelog
* Mon Jun 07 2004 Thomas Vander Stichele <thomas at apestaart dot org>
- first package
