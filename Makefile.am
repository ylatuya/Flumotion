AUTOMAKE_OPTIONS = dist-bzip2 no-dist-gzip 1.8

ACLOCAL_AMFLAGS = -I m4

SUBDIRS = . bin conf data flumotion doc m4 pkgconfig

EXTRA_DIST = \
	py-compile-destdir \
	env.in \
	python.mk \
	LICENSE.GPL \
	LICENSE.Flumotion \
	flumotion.spec \
	misc/flu.modules \
	misc/jhbuildrc

clean-local:
	@rm -rf _trial_temp

if HAVE_PYCHECKER
check-local: pychecker
endif

test:
	@make check -C flumotion/test

check-docs:
	@make check -C doc/reference

coverage:
	@trial --coverage coverage -R flumotion.test
	@$(PYTHON) tools/show-coverage.py _trial_temp/coverage/flumotion.*

# we redirect stderr so we don't get messages like
# warning: couldn't find real module for class SSL.Error (module name: SSL)
# which can't be turned off in pychecker

# for some reason, the run is *completely* different if the last set of
# components is moved up.  So keep it low

# same for any gtk stuff - keep it low

PYCHECKER_WHITELIST = \
	    flumotion/component/*.py 		\
	    flumotion/admin/*.py		\
	    flumotion/common/*.py		\
	    flumotion/configure/*.py		\
	    flumotion/manager/*.py 		\
	    flumotion/service/*.py		\
	    flumotion/worker/*.py 		\
	    flumotion/worker/checks/*.py 	\
	    flumotion/twisted/*.py		\
	    flumotion/ui/*.py			\
	    flumotion/component/*/*.py		\
	    flumotion/component/*/*/*.py	\
	    flumotion/admin/*/*.py		\
	    flumotion/admin/*/*/*.py

PYCHECKER_BLACKLIST = \
	flumotion/component/converters/overlay/overlay.py \
	flumotion/component/producers/firewire/firewire.py \
	flumotion/worker/checks/video.py

pycheckersplit:
	@echo running pychecker on each file ...
	@for file in $(filter-out $(PYCHECKER_BLACKLIST),$(wildcard $(PYCHECKER_WHITELIST))); \
	do \
		PYTHONPATH=`pwd`					\
		pychecker -Q -F misc/pycheckerrc 			\
                tools/pycheckerhelp.py					\
		$$file			 				\
		> /dev/null 2>&1;					\
		if test $$? -ne 0; then 				\
			echo "Error on $$file";				\
			pychecker -Q -F misc/pycheckerrc		\
                	tools/pycheckerhelp.py				\
			$$file;	break; fi; 				\
	done

pychecker:
	@echo running pychecker ...
	@PYTHONPATH=`pwd`			\
	pychecker -Q -F misc/pycheckerrc	\
            tools/pycheckerhelp.py		\
	$(filter-out $(PYCHECKER_BLACKLIST),$(wildcard $(PYCHECKER_WHITELIST)))\
		2> /dev/null || make pycheckerverbose

pycheckerverbose:
	@echo running pychecker ...
	PYTHONPATH=`pwd`			\
	pychecker -F misc/pycheckerrc		\
            tools/pycheckerhelp.py		\
	$(filter-out $(PYCHECKER_BLACKLIST),$(wildcard $(PYCHECKER_WHITELIST)))


fixme:
	tools/fixme | less -R

release: dist
	make $(PACKAGE)-$(VERSION).tar.bz2.md5

# generate md5 sum files
%.md5: %
	md5sum $< > $@

# generate a sloc count
sloc:
	sloccount flumotion | grep "(SLOC)" | cut -d = -f 2

.PHONY: test

# generated by make check during make distcheck
DISTCLEANFILES = cache/registry/registry.xml
