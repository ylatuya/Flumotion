.\" Process this file with
.\" groff -man -Tascii flumotion-worker.1
.\"
.TH flumotion-worker 1 "2009 September 4" "Fluendo" "Flumotion"

.SH NAME
flumotion-worker \- streaming media server worker

.SH SYNOPSIS
.B flumotion-worker
[
.B -
]
[
.B --debug
.I debug configuration
]
[
.B -L
.I logdir
]
[
.B -R
.I rundir
]
[
.B -H
.I host
]
[
.B -P
.I port
]
[
.B -T
.I protocol
]
[
.B -n
.I name
]
[
.B -D
]
[
.B --daemonize-to=
.I directory
]
[
.B -F
.I ports
|
.B --random-feederports
]
.B -u username
.B -p password

.SH DESCRIPTION
.B flumotion-worker
is the part of flumotion that actually performs all the real work of encoding,
streaming, etc. In a flumotion system, there will be a single manager, and could
be several workers running on different systems (this is useful to distribute
the load of, for instance, video encoding). You need to have a minimum of one
worker for flumotion to function correctly.

You should start flumotion-manager first, then connect flumotion-worker to the
running manager.

.SH OPTIONS
.IP "-h, --help"
Show a brief help message, then exit.
.IP "--version"
Show the version number.
.IP "-v, --verbose"
Be verbose in console output. This is equivalent to setting the debug level to
3, and will override any debug specifiers.
.IP "-dDEBUG, --debug=DEBUG"
Set the debug configuration to the specified
.B debug
string. See the
.I Debugging
section for details of this.
.IP "-L LOGDIR, --logdir=LOGDIR"
Specify the directory for logging output from the worker.
.IP "-R RUNDIR, --rundir=RUNDIR"
Specify the directory for runtime files created by the worker.
.IP "-HHOST, --host=HOST"
Specify the hostname on which the manager is running.
.IP "-PPORT, --port=PORT"
Specify the port on which the manager in running (usually 7531 for SSL, or
8642 otherwise)
.IP "-TTRANSPORT, --transport=TRANSPORT"
Set the transport protocol to use, either 'tcp' or 'ssl'. Default is 'ssl'.
.IP "-nNAME, --name=NAME"
Set the name for this worker to use in the manager.
.IP "-D, --daemonize"
Run in the background as a daemon.
.IP "-u, --username"
Specify the username to use to connect to the manager.
.IP "-p, --password"
Specify the password to use to connect to the manager.
.IP "-FPORTS, --feederports=PORT_FROM-PORT_TO
Specify the range of feeder ports to use in the format 'lower-upper'. These are
the ports used for inter-worker communication. If you have multiple workers on
seperate systems (perhaps one doing encoding, behind a firewall, and a second
doing the streaming outside the firewall), they must be able to communicate
using this port range, so you'll have to open these ports in your firewall. It
is recommended that you have a range of 20 ports.
.IP "--random-feederports"
Use random available feeder ports.

.SH DEBUGGING

In the unlikely event of something in flumotion not working, you might want to
debug it. The flumotion tools (
.B flumotion-worker
,
.B flumotion-admin
, and
.B flumotion-manager
) all alow you to turn on debugging output in two different ways.

Firstly, you can use an environment variable, FLU_DEBUG. Secondly, you can
launch the program with a -d or --debug switch. Either approach allows you to
specify a debug configuration string with the following syntax:

.RS
.B name1:n1,name2:n2,name3:n3
.RE

In this syntax, the 'name' variables can be replaced with the name of a
particular module within flumotion (such as 'admin', 'twisted', etc.). You can
also use '*' to specify all modules. The 'n' variables are numbers from 1 to 5,
larger numbers corresponding to more verbose output (ERROR, WARN, INFO, DEBUG,
and LOG). At level 4, full debugging information is emitted.

You can also use an abbreviated form where you just supply a single number, thisuses that debug level for all modules. Thus the simplest way to enable full
debug output for all modules is to use '-d 4' on the command line.

A more complex example would be '-d *:3,admin:4' to set the logging level for
the admin module to DEBUG, and for all other modules to INFO.

.SH EXAMPLES

Simple example, starting flumotion-worker connecting to a manager using TCP,
default host and port, and with the username 'user' and the password 'test'

.RS
flumotion-worker -v -T tcp -u user -p test --feederports=8060-8080
.RE

.SH BUGS
Hopefully none. If you find any bugs, please report them at
https://core.fluendo.com/trac/cgi-bin/trac.cgi

.SH SEE ALSO

.BR flumotion(1),flumotion-manager(1),flumotion-admin(1)
