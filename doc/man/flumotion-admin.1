.\" Process this file with
.\" groff -man -Tascii flumotion-admin.1
.\"
.TH flumotion-admin 1 "2005 July 13" "Fluendo" "Flumotion"

.SH NAME
flumotion-admin \- streaming media server administration GUI

.SH SYNOPSIS
.B flumotion-admin
[
.B -v
]
[
.B --debug
.I debug configuration
]

.SH DESCRIPTION
.B flumotion-admin
is a GUI application that provides administration capabilities for the flumotion
streaming server. Using it, you can configure and monitor the streams flumotion
serves.
.B flumotion-admin
connects to a running 
.I flumotion-manager
to control the manager, start and stop components, and display logging and 
monitoring information about the running components.

You must start 
.I flumotion-manager
before you can use
.B flumotion-admin
, but once you've done so you can just run
.B flumotion-admin
with no arguments to start the GUI.

.SH OPTIONS
.IP "-h, --help"
Show a brief help message, then exit.
.IP "--version"
Show the version number.
.IP "-v, --verbose"
Be verbose in console output.
.IP "-dDEBUG, --debug=DEBUG"
Set the debug configuration to the specified 
.B debug
string. See the
.I Debugging
section for details of this.

.SH DEBUGGING

In the unlikely event of something in flumotion not working, you might want to
debug it. The flumotion tools (
.B flumotion-worker
,
.B flumotion-admin
, and
.B flumotion-manager
) all alow you to turn on debugging output in two different ways.

Firstly, you can use an environment variable, FLU_DEBUG. Secondly, you can
launch the program with a -d or --debug switch. Either approach allows you to
specify a debug configuration string with the following syntax:

.RS
.B name1:n1,name2:n2,name3:n3
.RE

In this syntax, the 'name' variables can be replaced with the name of a 
particular module within flumotion (such as 'admin', 'twisted', etc.). You can 
also use '*' to specify all modules. The 'n' variables are numbers from 1 to 5,
larger numbers corresponding to more verbose output (ERROR, WARN, INFO, DEBUG, 
and LOG). At level 4, full debugging information is emitted. 

You can also use an abbreviated form where you just supply a single number, thisuses that debug level for all modules. Thus the simplest way to enable full
debug output for all modules is to use '-d 4' on the command line.

A more complex example would be '-d *:3,admin:4' to set the logging level for
the admin module to DEBUG, and for all other modules to INFO.


.SH BUGS
Hopefully none. If you find any bugs, please report them at
https://core.fluendo.com/trac/cgi-bin/trac.cgi

.SH SEE ALSO

.BR flumotion(1),flumotion-worker(1),flumotion-manager(1)
